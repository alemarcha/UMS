swagger: "2.0"
info:
  description: "REST API with Swagger doc"
  version: "1.0.0"
  title: "REST - Swagger Babelomics"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "babelomics@babelomics.es"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "localhost:3000"
basePath: "/api"
tags:
- name: "auth"
  description: "Auth endpoints"
schemes:
- "http"
paths:
  /users/login:
    post:
      description: "Login to the application"
      tags:
      - "users"
      consumes:
        - application/json
      produces:
      - "application/json"
      parameters:
        - in: "body"
          name: "Login user"
          description: "Email to use for login."
          schema:
            type: object
            required: 
              - email
              - password
            properties:
              email:
                type: string
              password:
                type: string
                format: "password"
      responses:
         200:
           description: "login"
  /users/register:
    post:
      description: "Register to the application"
      tags:
      - "users"
      produces:
      - "application/json"
      parameters:
      - name: "email"
        description: "Email to use for login."
        in: "formData"
        required: true
        type: "string"
      - name: "password"
        description: "User's password."
        in: "formData"
        required: true
        type: "string"
        format: "password"
      - name: "firstName"
        description: "User's first name."
        in: "formData"
        required: true
        type: "string"
      - name: "lastName"
        description: "User's last name."
        in: "formData"
        required: true
        type: "string"
      responses:
         200:
           description: "User added"
  /users/search:
    get:
      description: "Search users"
      tags:
      - "users"
      produces:
      - "application/json"
      responses:
         200:
           description: "Search users"
  /roles/search:
    get:
      description: "Search roles"
      tags:
      - "roles"
      produces:
      - "application/json"
      responses:
         200:
           description: "Search roles"
  /roles/create:
    post:
      description: "Create a new role"
      tags:
      - "roles"
      produces:
      - "application/json"
      parameters:
      - name: "roleName"
        description: "Descriptive role name."
        in: "formData"
        required: true
        type: "string"
      responses:
         200:
           description: "Role save"
  /permissions/search:
    get:
      description: "Search permissions"
      tags:
      - "permission"
      produces:
      - "application/json"
      responses:
         200:
           description: "Search permissions"
  /ping:
    get:
      description: "Ping Api Rest"
      produces:
      - application/json
      responses:
        200:
          description: Ping